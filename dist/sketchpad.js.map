{"version":3,"sources":["webpack://Sketchpad/webpack/universalModuleDefinition","webpack://Sketchpad/webpack/bootstrap","webpack://Sketchpad/./src/sketchpad.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Sketchpad","el","opts","this","sketching","_strokes","undoneStrokes","readOnly","aspectRatio","lineWidth","lineColor","lineCap","lineJoin","lineMiterLimit","Error","setOptions","canvas","document","createElement","ctx","getContext","width","clientWidth","height","setCanvasSize","appendChild","length","redraw","backgroundImage","console","log","drawImage","listen","map","toObj","configurable","backgroundColor","line","size","color","cap","join","miterLimit","toJSON","strokes","loadJSON","data","strokeObjs","Stroke","fromObj","toDataURL","type","setAttribute","toString","style","getCanvasSize","setLineWidth","setLineSize","setLineColor","setReadOnly","undo","push","pop","redo","clear","drawLine","start","end","lineOpts","getPointRelativeToCanvas","Point","x","y","pushStroke","resize","point","getLineSizeRelativeToCanvas","_a","_b","_c","_d","_e","_f","onDrawEnd","getCursorRelativeToCanvas","e","rect","getBoundingClientRect","isTouchEvent","touchEvent","touches","clientX","left","clientY","top","mouseEvent","normalizePoint","getLineWidthRelativeToCanvas","normalizeLineWidth","clearCanvas","clearRect","fillStyle","fillRect","drawStroke","stroke","points","beginPath","moveTo","lineTo","closePath","strokeStyle","pushPoint","_this","forEach","addEventListener","startStrokeHandler","drawStrokeHandler","endStrokeHandler","preventDefault","getImage","indexOf","default"],"mappings":"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","file":"sketchpad.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"responsive-sketchpad\"] = factory();\n\telse\n\t\troot[\"Sketchpad\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Sketchpad = /** @class */ (function () {\n    function Sketchpad(el, opts) {\n        this.sketching = false;\n        this._strokes = []; // v2.0 - Rename to strokes\n        this.undoneStrokes = [];\n        this.readOnly = false;\n        this.aspectRatio = 1; // v2.0 - Remove; rely on canvas as source-of-truth\n        this.lineWidth = 5;\n        this.lineColor = '#000';\n        this.lineCap = 'round';\n        this.lineJoin = 'round';\n        this.lineMiterLimit = 10;\n        if (el == null) {\n            throw new Error('Must pass in a container element');\n        }\n        if (opts != null) {\n            this.setOptions(opts);\n        }\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d');\n        var width = (opts === null || opts === void 0 ? void 0 : opts.width) || el.clientWidth;\n        var height = (opts === null || opts === void 0 ? void 0 : opts.height) || width * this.aspectRatio;\n        this.setCanvasSize(width, height);\n        el.appendChild(this.canvas);\n        if (this._strokes.length > 0) {\n            this.redraw();\n        }\n        if (this.backgroundImage !== null) {\n            console.log('джигруда');\n            console.log(this.backgroundImage);\n            this.drawImage(this.backgroundImage);\n        }\n        this.listen();\n    }\n    Object.defineProperty(Sketchpad.prototype, \"strokes\", {\n        // v2.0 - Remove; rename `_strokes`\n        get: function () {\n            return this._strokes.map(function (s) { return s.toObj(); });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Sketchpad.prototype, \"undos\", {\n        // v2.0 - Remove\n        get: function () {\n            return this.undoneStrokes.map(function (s) { return s.toObj(); });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Sketchpad.prototype, \"opts\", {\n        // v2.0 - Remove\n        get: function () {\n            return {\n                backgroundColor: this.backgroundColor,\n                readOnly: this.readOnly,\n                width: this.canvas.width,\n                height: this.canvas.height,\n                aspectRatio: this.canvas.width / this.canvas.height,\n                backgroundImage: this.backgroundImage,\n                line: {\n                    size: this.lineWidth,\n                    color: this.lineColor,\n                    cap: this.lineCap,\n                    join: this.lineJoin,\n                    miterLimit: this.lineMiterLimit,\n                },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // Convert the sketchpad to a JSON object that can be loaded into\n    // other sketchpads or stored on a server\n    Sketchpad.prototype.toJSON = function () {\n        return {\n            aspectRatio: this.canvas.width / this.canvas.height,\n            strokes: this.strokes,\n        };\n    };\n    // Load a json object into the sketchpad\n    Sketchpad.prototype.loadJSON = function (data) {\n        var strokeObjs = data.strokes || [];\n        this._strokes = strokeObjs.map(function (s) { return Stroke.fromObj(s); });\n        this.redraw();\n    };\n    // Converts to image File\n    Sketchpad.prototype.toDataURL = function (type) {\n        return this.canvas.toDataURL(type);\n    };\n    // Set the size of canvas\n    Sketchpad.prototype.setCanvasSize = function (width, height) {\n        this.canvas.setAttribute('width', width.toString());\n        this.canvas.setAttribute('height', height.toString());\n        this.canvas.style.width = width + 'px';\n        this.canvas.style.height = height + 'px';\n    };\n    // Get the size of the canvas\n    Sketchpad.prototype.getCanvasSize = function () {\n        return {\n            width: this.canvas.width,\n            height: this.canvas.height,\n        };\n    };\n    // Set the line width\n    Sketchpad.prototype.setLineWidth = function (width) {\n        this.lineWidth = width;\n    };\n    // Set the line width\n    Sketchpad.prototype.setLineSize = function (size) {\n        this.lineWidth = size;\n    };\n    // Set the line color\n    Sketchpad.prototype.setLineColor = function (color) {\n        this.lineColor = color;\n    };\n    // Set whether or not new strokes can be drawn on the canvas\n    Sketchpad.prototype.setReadOnly = function (readOnly) {\n        this.readOnly = readOnly;\n    };\n    // Undo the last stroke\n    Sketchpad.prototype.undo = function () {\n        if (this._strokes.length === 0) {\n            return;\n        }\n        this.undoneStrokes.push(this._strokes.pop());\n        this.redraw();\n    };\n    // Redo the last undone stroke\n    Sketchpad.prototype.redo = function () {\n        if (this.undoneStrokes.length === 0) {\n            return;\n        }\n        this._strokes.push(this.undoneStrokes.pop());\n        this.redraw();\n    };\n    // Clear the sketchpad\n    Sketchpad.prototype.clear = function () {\n        this.undoneStrokes = [];\n        this._strokes = [];\n        this.redraw();\n    };\n    // Draw a straight line\n    Sketchpad.prototype.drawLine = function (start, end, lineOpts) {\n        this.setOptions({ line: lineOpts });\n        start = this.getPointRelativeToCanvas(new Point(start.x, start.y));\n        end = this.getPointRelativeToCanvas(new Point(end.x, end.y));\n        this.pushStroke([start, end]);\n        this.redraw();\n    };\n    // Resize the canvas maintaining original aspect ratio\n    Sketchpad.prototype.resize = function (width) {\n        var height = width * this.aspectRatio;\n        this.lineWidth = this.lineWidth * (width / this.canvas.width);\n        this.setCanvasSize(width, height);\n        this.redraw();\n    };\n    // Returns a points x,y locations relative to the size of the canvas\n    Sketchpad.prototype.getPointRelativeToCanvas = function (point) {\n        return {\n            x: point.x / this.canvas.width,\n            y: point.y / this.canvas.height,\n        };\n    };\n    //  Get the line size relative to the size of the canvas\n    Sketchpad.prototype.getLineSizeRelativeToCanvas = function (width) {\n        return width / this.canvas.width;\n    };\n    Sketchpad.prototype.setOptions = function (opts) {\n        var _a, _b, _c, _d, _e, _f;\n        if (opts.backgroundColor) {\n            this.backgroundColor = opts.backgroundColor;\n        }\n        if (opts.backgroundImage) {\n            this.backgroundImage = opts.backgroundImage;\n        }\n        if ((_a = opts.line) === null || _a === void 0 ? void 0 : _a.size) {\n            this.lineWidth = opts.line.size;\n        }\n        if ((_b = opts.line) === null || _b === void 0 ? void 0 : _b.cap) {\n            this.lineCap = opts.line.cap;\n        }\n        if ((_c = opts.line) === null || _c === void 0 ? void 0 : _c.join) {\n            this.lineJoin = opts.line.join;\n        }\n        if ((_d = opts.line) === null || _d === void 0 ? void 0 : _d.miterLimit) {\n            this.lineMiterLimit = opts.line.miterLimit;\n        }\n        if (opts.aspectRatio) {\n            this.aspectRatio = opts.aspectRatio;\n        }\n        if (opts.data) {\n            this._strokes = (_f = (_e = opts.data.strokes) === null || _e === void 0 ? void 0 : _e.map(function (s) { return Stroke.fromObj(s); })) !== null && _f !== void 0 ? _f : [];\n        }\n        if (opts.onDrawEnd) {\n            this.onDrawEnd = opts.onDrawEnd;\n        }\n    };\n    // For a given event, get the point at which the event occurred\n    // relative to the canvas\n    Sketchpad.prototype.getCursorRelativeToCanvas = function (e) {\n        var point;\n        var rect = this.canvas.getBoundingClientRect();\n        if (isTouchEvent(e)) {\n            var touchEvent = e;\n            point = new Point(touchEvent.touches[0].clientX - rect.left, touchEvent.touches[0].clientY - rect.top);\n        }\n        else {\n            var mouseEvent = e;\n            point = new Point(mouseEvent.clientX - rect.left, mouseEvent.clientY - rect.top);\n        }\n        return new Point(point.x / this.canvas.width, point.y / this.canvas.height);\n    };\n    Sketchpad.prototype.normalizePoint = function (p) {\n        return new Point(p.x * this.canvas.width, p.y * this.canvas.height);\n    };\n    Sketchpad.prototype.getLineWidthRelativeToCanvas = function (size) {\n        return size / this.canvas.width;\n    };\n    Sketchpad.prototype.normalizeLineWidth = function (width) {\n        return width * this.canvas.width;\n    };\n    // Erase the entire canvas\n    Sketchpad.prototype.clearCanvas = function () {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        if (this.backgroundImage) {\n            this.drawImage(this.backgroundImage);\n        }\n        if (this.backgroundColor) {\n            this.ctx.fillStyle = this.backgroundColor;\n            this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        }\n    };\n    // Draw a single stroke\n    Sketchpad.prototype.drawStroke = function (stroke) {\n        if (stroke.points == null)\n            return;\n        this.ctx.beginPath();\n        for (var i = 0; i < stroke.points.length - 1; i++) {\n            var start = this.normalizePoint(stroke.points[i]);\n            var end = this.normalizePoint(stroke.points[i + 1]);\n            this.ctx.moveTo(start.x, start.y);\n            this.ctx.lineTo(end.x, end.y);\n        }\n        this.ctx.closePath();\n        if (stroke.color) {\n            this.ctx.strokeStyle = stroke.color;\n        }\n        if (stroke.width) {\n            this.ctx.lineWidth = this.normalizeLineWidth(stroke.width);\n        }\n        if (stroke.join) {\n            this.ctx.lineJoin = stroke.join;\n        }\n        if (stroke.cap) {\n            this.ctx.lineCap = stroke.cap;\n        }\n        if (stroke.miterLimit) {\n            this.ctx.miterLimit = stroke.miterLimit;\n        }\n        this.ctx.stroke();\n    };\n    Sketchpad.prototype.pushStroke = function (points) {\n        this._strokes.push(Stroke.fromObj({\n            points: points,\n            size: this.getLineWidthRelativeToCanvas(this.lineWidth),\n            color: this.lineColor,\n            cap: this.lineCap,\n            join: this.lineJoin,\n            miterLimit: this.lineMiterLimit,\n        }));\n    };\n    Sketchpad.prototype.pushPoint = function (point) {\n        var stroke = this._strokes[this._strokes.length - 1];\n        if (stroke.points) {\n            stroke.points.push(point);\n        }\n    };\n    // Redraw the whole canvas\n    Sketchpad.prototype.redraw = function () {\n        var _this = this;\n        this.clearCanvas();\n        this.drawImage(this.backgroundImage);\n        this._strokes.forEach(function (s) { return _this.drawStroke(s); });\n    };\n    Sketchpad.prototype.drawImage = function (backgroundImage) {\n        this.ctx.drawImage(backgroundImage, 0, 0);\n    };\n    Sketchpad.prototype.listen = function () {\n        var _this = this;\n        ['mousedown', 'touchstart'].forEach(function (name) {\n            return _this.canvas.addEventListener(name, function (e) { return _this.startStrokeHandler(e); });\n        });\n        ['mousemove', 'touchmove'].forEach(function (name) { return _this.canvas.addEventListener(name, function (e) { return _this.drawStrokeHandler(e); }); });\n        ['mouseup', 'mouseleave', 'touchend'].forEach(function (name) {\n            return _this.canvas.addEventListener(name, function (e) { return _this.endStrokeHandler(e); });\n        });\n    };\n    Sketchpad.prototype.startStrokeHandler = function (e) {\n        e.preventDefault();\n        if (this.readOnly) {\n            return;\n        }\n        this.sketching = true;\n        var point = this.getCursorRelativeToCanvas(e);\n        this.pushStroke([point]);\n        this.redraw();\n    };\n    Sketchpad.prototype.drawStrokeHandler = function (e) {\n        e.preventDefault();\n        if (!this.sketching)\n            return;\n        var point = this.getCursorRelativeToCanvas(e);\n        this.pushPoint(point);\n        this.redraw();\n    };\n    Sketchpad.prototype.endStrokeHandler = function (e) {\n        e.preventDefault();\n        if (!this.sketching)\n            return;\n        this.sketching = false;\n        if (isTouchEvent(e)) {\n            return; // touchend events do not have a position\n        }\n        var point = this.getCursorRelativeToCanvas(e);\n        this.pushPoint(point);\n        this.redraw();\n        if (this.onDrawEnd) {\n            this.onDrawEnd();\n        }\n    };\n    /**\n     * getImage from canvas\n     */\n    Sketchpad.prototype.getImage = function () {\n        return this.canvas.toDataURL(\"image/jpeg\", 1.0);\n    };\n    return Sketchpad;\n}());\nexports.default = Sketchpad;\nfunction isTouchEvent(e) {\n    return e.type.indexOf('touch') !== -1; // v2.0 - Switch to startsWith\n}\nvar Point = /** @class */ (function () {\n    function Point(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Point;\n}());\nvar Stroke = /** @class */ (function () {\n    function Stroke() {\n    }\n    Stroke.fromObj = function (s) {\n        var stroke = new Stroke();\n        stroke.points = s.points;\n        stroke.width = s.size;\n        stroke.color = s.color;\n        stroke.cap = s.cap;\n        stroke.join = s.join;\n        stroke.miterLimit = s.miterLimit;\n        return stroke;\n    };\n    Stroke.prototype.toObj = function () {\n        return {\n            points: this.points,\n            size: this.width,\n            color: this.color,\n            cap: this.cap,\n            join: this.join,\n            miterLimit: this.miterLimit,\n        };\n    };\n    return Stroke;\n}());\n"],"sourceRoot":""}